---
// src/pages/projects/[slug].astro
import MainLayout from '../../layouts/MainLayout.astro';
import { sanityClient, urlFor } from '../../lib/sanityClient';
import type { Project } from "../../types/sanity";
import { PortableText } from 'astro-portabletext';
import { formatDate } from "../../utils/dateFormatter";

// This part is correct and does not need to change
export async function getStaticPaths() {
  const query = `*[_type == "project" && defined(slug.current)]{ "slug": slug.current }`;
  const projects = await sanityClient.fetch(query);

  return projects.map((project: { slug: string }) => ({
    params: { slug: project.slug },
  }));
}

// 2. Get the specific project data for this page
const { slug } = Astro.params;
// THE FIX IS HERE: Added [0] to the end of the query
const query = `*[_type == "project" && slug.current == $slug][0]{
  ...,
  "tech": tech[]{
    techDescription,
    tech->{
      _id,
      name 
    }
  }
}`;
const projectList: Project = await sanityClient.fetch(query, { slug });



// Now 'project' is an object, and this destructuring will work!
const { title, descriptions, mainImage, imageText, client, category, projectDate, feature, githuburl, endDate, liveUrl, videourl } = projectList;
---

<MainLayout>
  <!-- Page Title -->
  <div class="page-title dark-background">
    <div class="container d-lg-flex justify-content-between align-items-center">
      <h1 class="mb-2 mb-lg-0">Portfolio Details</h1>
      <nav class="breadcrumbs">
        <ol>
          <li><a href="../#portfolio">Home</a></li>
          <li class="current">Portfolio Details</li>
        </ol>
      </nav>
    </div>
  </div><!-- End Page Title -->

  <!-- Portfolio Details Section -->
  <section id="portfolio-details" class="portfolio-details section">

    <div class="container" data-aos="fade-up" data-aos-delay="100">

      <div class="row gy-4">

        <div class="col-lg-8">
          <div class="portfolio-details-slider swiper init-swiper">

            <script type="application/json" class="swiper-config">
              {
                "loop": true,
                "speed": 600,
                "autoplay": {
                  "delay": 5000
                },
                "slidesPerView": "auto",
                "pagination": {
                  "el": ".swiper-pagination",
                  "type": "bullets",
                  "clickable": true
                }
              }
            </script>

            <div class="swiper-wrapper align-items-center">
  
              <div class="swiper-slide">
                <a href={urlFor(mainImage).url()} class="glightbox" data-gallery="project-gallery" data-description={imageText || 'Main project image'}>
                  <img src={urlFor(mainImage).width(800).url()} alt={imageText || 'Main project image'}>
                </a>
                <p class="center">{imageText || 'Main project image'}</p>
              </div>
              
              {projectList.gallery && projectList.gallery.length > 0 && (
                projectList.gallery.map((galleryImage) => (
                  galleryImage && (
                    <div class="swiper-slide">
                      <a href={urlFor(galleryImage.projectgallery).url()} class="glightbox" data-gallery="project-gallery" data-description={galleryImage.alt || ''}>
                        <img src={urlFor(galleryImage.projectgallery).width(800).url()} alt={galleryImage.alt || 'Project Gallery image'}/>
                      </a>
                      <p class="center mt-2">{galleryImage.alt || 'Project Gallery image'}</p>
                    </div>
                  )
                ))
              )}

            </div>

            <div class="swiper-pagination"></div>
          </div>
        </div>

        <div class="col-lg-4">
           <h2>{title}</h2><br>
          <div class="portfolio-info" data-aos="fade-up" data-aos-delay="200">
            <h3>Project information</h3>
            <ul>
              <li><strong>Category</strong>: {category}</li>
              <li><strong>Client</strong>: {client}</li>
              <li><strong>Project date</strong>: {formatDate(projectDate)} - {formatDate(endDate)}</li>
              {githuburl && (<li><strong>Repository</strong>: <a href={githuburl} target="_blank">Github Repository Project</a></li>)}
              {liveUrl && (<li><strong>Live URL</strong>: <a href={liveUrl} target="_blank">Live URL/Demo Project</a></li>)}
              {videourl && (<li><strong>Live URL</strong>: <a href={videourl} target="_blank">Demo video Project</a></li>)}
              <li><strong>Technologies</strong>: 
              {projectList.tech.map((techItem) => (
    
                // THIS CHECK IS ESSENTIAL: It skips null/broken references.
                techItem && (
                  <ul>
                    <li><strong>
                      - {techItem.tech?.name}:
                    </strong>
                    <span> {techItem.techDescription}</span>
                    </li>
                  </ul>
                )

              ))}
              </li>
              <li><strong>Features: </strong>:
              {projectList.feature.map((featureItem) => (
    
                // THIS CHECK IS ESSENTIAL: It skips null/broken references.
                featureItem && (
                  <ul>
                    <li>
                      - {featureItem.featureName}:
                    </li>
                  </ul>
                )

              ))}
              </li>
            </ul>
          </div>
          
          <div class="description portfolio-description" data-aos="fade-up" data-aos-delay="300">
            <h3>Description :</h3>
            <p>
              <PortableText value={descriptions} />
            </p>
          </div>
        </div>

      </div>

    </div>

  </section><!-- /Portfolio Details Section -->
</MainLayout>